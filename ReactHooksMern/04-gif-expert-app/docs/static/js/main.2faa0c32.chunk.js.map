{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","value","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,UAAU,cAAcC,SAVb,SAAEC,GACnBA,EAAEC,iBAEGL,EAAWM,OAAOC,OAAS,IAC5BT,GAAe,SAAAU,GAAU,OAAMR,GAAN,mBAAsBQ,OAC/CP,EAAc,MAKlB,SACI,uBACIC,UAAU,qBACVO,KAAO,OACPC,SAlBc,SAAEN,GACxBH,EAAeG,EAAEO,OAAOC,QAkBhBC,YAAc,SACdD,MAAUZ,O,+BC3Bbc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAVhB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKf,UAAU,uDAAf,UACI,qBAAKA,UAAU,eAAe6B,IAAMd,EAAMe,IAAML,IAChD,mBAAGzB,UAAU,iBAAb,SAAgCyB,QCH/BM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA4BhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAmBA,OAdAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEd,UAGZ,CAAEnB,IAEEoB,EDlB0BM,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaY,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIhC,UAAU,sDAAd,SAAsEa,IACpEmB,GAAW,4CAETN,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,WEcnBgB,EAvBM,WAEjB,MAAoC3C,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBV,EAAnB,KAEA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,yBAASI,UAAU,UAAnB,SAEMM,EAAWgB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEEA,SAAYA,GADLA,Y,MCZ3B4B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.2faa0c32.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n    \r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue , ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"addCategory\" onSubmit = { handleSubmit }>\r\n            <input\r\n                className=\"addCategory__input\"\r\n                type = \"text\"\r\n                onChange = { handleInputChange }\r\n                placeholder = 'Buscar'\r\n                value = { inputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=s4kaGmu64b7YqHI82KwuMtHWeL9M1lbj`;\r\n    const response = await fetch( url );\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"gifGrid__container animate__animated animate__fadeIn\">\r\n            <img className=\"gifGrid__img\" src={ url } alt={ title } />\r\n            <p className=\"gifGrid__title\">{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"gifGrid__category animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p>Loading ...</p>}\r\n            {\r\n                images.map( img  => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });\r\n                }, 3000);\r\n            })\r\n\r\n    }, [ category ])\r\n\r\n    return state; // { data: [], loading: true }\r\n\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n      <>\r\n        <h1>Gif Expert App</h1>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n        <section className=\"gifGrid\">\r\n            {\r\n              categories.map( category => (\r\n                  <GifGrid \r\n                    key ={ category }\r\n                    category ={ category }\r\n                  />\r\n              ))\r\n            }\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp /> , document.getElementById('root'));"],"sourceRoot":""}